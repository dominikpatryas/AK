<Window x:Class="euler_graph_generator.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:vm="clr-namespace:euler_graph_generator.ViewModels"
        xmlns:graphsharp="clr-namespace:GraphSharp.Controls;assembly=GraphSharp.Controls"
        xmlns:local="clr-namespace:euler_graph_generator.GraphElements"
        xmlns:converter="clr-namespace:euler_graph_generator.ValueConverters"
        mc:Ignorable="d" 
        Title="euler" Height="720" Width="1280" MinHeight="360" MinWidth="640">
    <Window.Resources>
        <converter:EdgeColorConverter x:Key="EdgeColorConverter"/>
        <converter:ConvertPath x:Key="ConvertPath"/>
        <DataTemplate x:Key="demoTemplate" DataType="{x:Type local:Vertex}">
            <StackPanel Orientation="Horizontal" Margin="5">
                <TextBlock Text="{Binding Path=VertexValue, Mode=OneWay}" Foreground="White" />
            </StackPanel>
        </DataTemplate>

        <Style TargetType="{x:Type graphsharp:VertexControl}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type graphsharp:VertexControl}">
                        <Border 
                               Background="LightBlue"
							   CornerRadius="10,10,10,10"
							   Padding="{TemplateBinding Padding}">

                            <StackPanel Orientation="Vertical">
                                <ContentPresenter Content="{TemplateBinding Vertex}" 
                                            ContentTemplate="{StaticResource demoTemplate}"/>
                            </StackPanel>
                            <Border.Effect>
                                <DropShadowEffect BlurRadius="2" Color="LightGray" 
                                    Opacity="0.3" Direction="315"/>
                            </Border.Effect>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <Style TargetType="{x:Type graphsharp:EdgeControl}">
            <Style.Resources>
                <ToolTip x:Key="ToolTipContent">
                    <StackPanel>
                        <TextBlock FontWeight="Bold" Text="Edge Information"/>
                        <TextBlock Text="{Binding ID}"/>
                    </StackPanel>
                </ToolTip>
            </Style.Resources>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Foreground" Value="Blue"/>
                </Trigger>
            </Style.Triggers>
            <Setter Property="ToolTip" Value="{StaticResource ToolTipContent}"/>
            <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Self}, Path=Edge.EdgeColor, Converter={StaticResource EdgeColorConverter}}"/>

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type graphsharp:EdgeControl}">
                        <Path Stroke="{TemplateBinding Foreground}"
                          StrokeThickness="2"
                          MinWidth="1"
                          MinHeight="1"
                          x:Name="edgePath">
                            <Path.Data>
                                <PathGeometry>
                                    <PathGeometry.Figures>
                                        <MultiBinding Converter="{StaticResource ConvertPath}">
                                            <Binding RelativeSource="{RelativeSource TemplatedParent}"
                                                 Path="Source.(graphsharp:GraphCanvas.X)" />
                                            <Binding RelativeSource="{RelativeSource TemplatedParent}"
                                                 Path="Source.(graphsharp:GraphCanvas.Y)" />
                                            <Binding RelativeSource="{RelativeSource TemplatedParent}"
                                                 Path="Source.ActualWidth" />
                                            <Binding RelativeSource="{RelativeSource TemplatedParent}"
                                                 Path="Source.ActualHeight" />
                                            <Binding RelativeSource="{RelativeSource TemplatedParent}"
                                                 Path="Target.(graphsharp:GraphCanvas.X)" />
                                            <Binding RelativeSource="{RelativeSource TemplatedParent}"
                                                 Path="Target.(graphsharp:GraphCanvas.Y)" />
                                            <Binding RelativeSource="{RelativeSource TemplatedParent}"
                                                 Path="Target.ActualWidth" />
                                            <Binding RelativeSource="{RelativeSource TemplatedParent}"
                                                 Path="Target.ActualHeight" />
                                            <Binding RelativeSource="{RelativeSource TemplatedParent}"
                                                 Path="RoutePoints" />
                                        </MultiBinding>
                                    </PathGeometry.Figures>
                                </PathGeometry>
                            </Path.Data>
                        </Path>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </Window.Resources>
    <Window.Background>
        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
            <GradientStop Color="White"/>
            <GradientStop Color="#FFD6DAD6" Offset="1"/>
        </LinearGradientBrush>
    </Window.Background>
    <Viewbox StretchDirection="Both" Stretch="Uniform">
        <Grid Width="1340" Height="720">
            <Grid.Background>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="#FFF" Offset="0.11"/>
                    <GradientStop Color="#FFF" Offset="0.996"/>
                </LinearGradientBrush>
            </Grid.Background>
            <Grid.RowDefinitions>
                <RowDefinition Height="593*"/>
                <RowDefinition Height="66*"/>
                <RowDefinition Height="61*"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="75*"/>
                <ColumnDefinition Width="193*"/>
            </Grid.ColumnDefinitions>

            <Grid Grid.Column="1" HorizontalAlignment="Left" Height="556" Margin="10,10,0,0" VerticalAlignment="Top" Width="945">
                <Grid.Background>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="#FFF3F3EC"/>
                        <GradientStop Color="White" Offset="1"/>
                        <GradientStop Color="White"/>
                    </LinearGradientBrush>
                </Grid.Background>
                <Viewbox Name="GraphView" StretchDirection="Both" Stretch="Uniform" Margin="126,83,104,55">
                    <vm:GraphLayout x:Name="graphLayout" Margin="100"
						Graph="{Binding Path=Graph}"
						LayoutAlgorithmType="{Binding Path=LayoutAlgorithmType, Mode=OneWay}"
						OverlapRemovalAlgorithmType="FSA"
						HighlightAlgorithmType="Simple" />
                </Viewbox>
            </Grid>


            <Grid HorizontalAlignment="Left" Height="696" Margin="10,10,0,0" VerticalAlignment="Top" Width="370" Grid.RowSpan="3">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="109*"/>
                    <ColumnDefinition Width="261*"/>
                </Grid.ColumnDefinitions>
                <Grid.Background>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="#FFF"/>
                        <GradientStop Color="#FFF" Offset="1"/>
                    </LinearGradientBrush>
                </Grid.Background>
                <Label Content="V count"  Margin="94,72,72.6,573" Style="{DynamicResource Label}" RenderTransformOrigin="0.306,0.559" FontSize="27" Grid.ColumnSpan="2">
                    <Label.RenderTransform>
                        <TransformGroup>
                            <ScaleTransform/>
                            <SkewTransform/>
                            <RotateTransform Angle="0.128"/>
                            <TranslateTransform/>
                        </TransformGroup>
                    </Label.RenderTransform>
                </Label>
                <TextBox HorizontalAlignment="Left" FontSize="25" Height="60" Margin="7.919,149,0,0"  Text="{Binding Path=NumberOfVertices}" VerticalAlignment="Top" Width="215"  HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Grid.Column="1"/>
                <Slider Visibility="Hidden" x:Name="liczbaWierzcholkow" HorizontalAlignment="Left" Value="{Binding Path=NumberOfVertices}" Height="30" Margin="20,64,0,0" VerticalAlignment="Top" Width="193" Foreground="#FF811B1B" Maximum="50" Minimum="0" Grid.ColumnSpan="2"/>

                <Label Content="Chance (0.00 - 1)"  Margin="96,240,-0.4,332" Style="{DynamicResource Label}" RenderTransformOrigin="0.306,0.559" FontSize="27" Grid.ColumnSpan="2"/>
                <TextBox HorizontalAlignment="Left" FontSize="25"  Height="60" Margin="7.919,304,0,0"  Text="{Binding Path=ProbabilityValue}" VerticalAlignment="Top" Width="215"  HorizontalContentAlignment="Center" VerticalContentAlignment="Center" RenderTransformOrigin="0.496,3.002" Grid.Column="1"/>
                <Slider Visibility="Hidden" x:Name="prawdopodobienstwo" HorizontalAlignment="Left" Value="{Binding Path=ProbabilityValue}" Height="30" Margin="20,149,0,0" VerticalAlignment="Top" Width="193" Foreground="#FF811B1B" Maximum="1" Minimum="0" Grid.ColumnSpan="2"/>

                <Label Visibility="Hidden" Content="Macierz incydencji"  Margin="91,190,113,468" Style="{DynamicResource Label}" RenderTransformOrigin="0.306,0.559" FontSize="17" Grid.ColumnSpan="2"/>

                <Grid Visibility="Hidden" HorizontalAlignment="Left" Height="180" Margin="17,220,0,0" VerticalAlignment="Top" Width="316" Grid.ColumnSpan="2">
                    <Grid.Background>
                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                            <GradientStop Color="#FFF3F3EC"/>
                            <GradientStop Color="White" Offset="1"/>
                            <GradientStop Color="White"/>
                        </LinearGradientBrush>
                    </Grid.Background>
                    <DataGrid ItemsSource="{Binding Path=DataView}" AutoGenerateColumns="True"/>
                </Grid>
                <StackPanel Orientation="Vertical"  Margin="0,400,0,0" Grid.ColumnSpan="2" >
                    <Label Visibility="Hidden" Content="Algorytm generowania grafu" HorizontalAlignment="Center" Style="{DynamicResource Label}" Margin="6,0,25,10" FontSize="17"/>
                    <ComboBox Visibility="Hidden" IsEnabled="False" ItemsSource="{Binding LayoutAlgorithmTypes}"
                          SelectedItem="{Binding LayoutAlgorithmType, Mode=TwoWay}"
                          Width="150" Height="25" Margin="90,0,103,0" />
                    <StackPanel Margin="18,10,72,0" Orientation="Horizontal" HorizontalAlignment="Left" >

                        <Label Visibility="Hidden" Style="{DynamicResource Label}" Content="Graf eulerowski:"  FontSize="15"/>

                        <Label  Style="{DynamicResource Label}" Foreground="Red" x:Name="IsEuler" Visibility="Hidden" Content="NIE" FontSize="15"/>
                    </StackPanel>
                    <StackPanel Margin="18,0,72,0" Orientation="Horizontal" HorizontalAlignment="Left" >
                        <Label Style="{DynamicResource Label}"  Content="Graph integral"  FontSize="25"/>
                        <Label Style="{DynamicResource Label}" Foreground="Red" x:Name="IsConnected" Visibility="Hidden" Content="NIE" FontSize="25"/>
                    </StackPanel>
                    <StackPanel Margin="18,0,72,0" Orientation="Vertical" HorizontalAlignment="Left" >
                        <ScrollViewer HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto">
                            <TextBlock 
         TextWrapping="Wrap" Foreground="Red" Visibility="Hidden" Text="Brak ścieżki/cyklu eulera" FontSize="15" Name="EulerPath" Height="30"/>
                        </ScrollViewer>
                        <Label Visibility="Hidden" Style="{DynamicResource Label}" Content="Ścieżka/cykl eulera: "  FontSize="15"/>
                    </StackPanel>

                    <Grid>
                        <Slider Visibility="Hidden" x:Name="sleeptime" Value="{Binding SleepTime}" Height="30" VerticalAlignment="Top" Width="186" Foreground="#FF811B1B" Maximum="20" Minimum="0" Margin="13,0,156,0"  IsSnapToTickEnabled="True" SmallChange="1" LargeChange="2"/>
                        <TextBox Visibility="Hidden" Height="30" Text="{Binding Path=SleepTime}" VerticalAlignment="Top" Width="111" Style="{DynamicResource YellowTextBox}" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Margin="150,0,40,0" />
                    </Grid>
                </StackPanel>
            </Grid>

            <Grid HorizontalAlignment="Left" Height="66" VerticalAlignment="Top" Width="945" Grid.Row="1" Grid.Column="1" Margin="10,0,0,0">
                <Grid.Background>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="#FFF"/>
                        <GradientStop Color="White" Offset="1"/>
                    </LinearGradientBrush>
                </Grid.Background>
                <Button x:Name="Generuj" Content="START" HorizontalAlignment="Left" Height="29" Margin="10,27,0,0" VerticalAlignment="Top" Width="113"  Click="Generuj_Click" />
                <Button x:Name="Napraw_graf" Visibility="Hidden" IsEnabled="False" Content="REPAIR" HorizontalAlignment="Left" Height="26" Margin="400,30,0,0" VerticalAlignment="Top" Width="100" Click="Napraw_Click" />
                <Button Visibility="Hidden" x:Name="Euler" IsEnabled="False" Content="Wyznacz cykl Eulera" HorizontalAlignment="Left" Height="46" Margin="350,10,0,0" VerticalAlignment="Top" Width="150"  Click="Euler_Click"/>
                <Button x:Name="Reset" IsEnabled="False" Content="RESET" HorizontalAlignment="Left" Height="26" Margin="785,30,0,0" VerticalAlignment="Top" Width="150"  Click="Reset_Click" RenderTransformOrigin="0.499,-0.043" />
                <Button Visibility="Hidden" x:Name="Zapisz" IsEnabled="False" Content="Zapisz do pliku" HorizontalAlignment="Left" Height="46" Margin="630,10,0,0" VerticalAlignment="Top" Width="150" Click="Zapisz_Click" RenderTransformOrigin="0.499,-0.043" />

            </Grid>


            <!--Stopka-->
            <!--Label organizacji-->
            <!--Label autorów-->
            <Label Content="" HorizontalAlignment="Left" Height="32" Margin="10,15,0,0" Grid.Row="2" VerticalAlignment="Top" Width="712" Foreground="White" Grid.Column="1" FontFamily="Sitka Text" FontStyle="Italic" FontSize="16"/>

        </Grid>
    </Viewbox>
</Window>
